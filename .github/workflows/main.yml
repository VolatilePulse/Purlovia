name: Purlovia on-push Actions

on: [push]

env:
  PIPENV_NOSPIN: 1
  PIPENV_CACHE_DIR: /tmp/.pip-cache
  WORKON_HOME: /tmp/pipenv-venvs

jobs:
  check:
    strategy:
      matrix:
        python_version: ['3.10']
        os: [ubuntu-latest]

    name: Lint and test using Python ${{ matrix.python_version }} on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}

    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Set up Python
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python_version }}

    - name: Install pipenv
      run: python -m pip install pipenv

    - name: Cache pipenv cache
      uses: actions/cache@v1
      with:
        path: ${{ env.PIPENV_CACHE_DIR }}
        key: pipenvcache-${{ runner.OS }}-${{ matrix.python_version }}-${{ hashFiles('Pipfile.lock') }}
        restore-keys: |
          pipenvcache-${{ runner.OS }}-${{ matrix.python_version }}-
          pipenvcache-${{ runner.OS }}-

    - name: Cache pipenv venv
      uses: actions/cache@v1
      with:
        path: ${{ env.WORKON_HOME }}
        key: pipenvvenv-${{ runner.OS }}-${{ matrix.python_version }}-${{ hashFiles('Pipfile.lock') }}
        restore-keys: |
          pipenvvenv-${{ runner.OS }}-${{ matrix.python_version }}-
          pipenvvenv-${{ runner.OS }}-

    - name: Create virtualenv and install deps
      run: pipenv install --dev --deploy --python ${{ matrix.python_version }}

    - name: Check for vulnerable deps
      run: pipenv run check
      env:
        PIPENV_PYUP_API_KEY: ""

    # - name: Format check - isort
    #   run: pipenv run isort > /dev/null

    - name: Format check - yapf
      run: pipenv run yapf > /dev/null

    - name: Lint check - flake8
      run: pipenv run flake

    - name: Type check - mypy
      run: pipenv run mypy

    - name: Run tests
      run: pipenv run tests-nogame

    # - name: Save test results
    # - name: Save code coverage


    - name: Publishing live Docker image
      if: github.event_name == 'push' && github.ref == 'refs/heads/live'
      uses: elgohr/Publish-Docker-Github-Action@master
      env:
        COMMIT: ${{ github.sha }}
        BRANCH: ${{ github.repository }}@${{ github.ref_name }}
      with:
        name: coldino/purlovia:live
        buildargs: COMMIT,BRANCH
        username: ${{ secrets.DCKR_USR }}
        password: ${{ secrets.DCKR_PSSW }}
